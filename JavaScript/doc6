Reference
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Details_of_the_Object_Model

- Class Based Languages :- eg Cpp, Java. They have classes as templates and objects as instances of that template.
  Prototypical Languages :- eg JS. They have prototype objects and then more objects are created using that prototype.
    An object used as a template from which to get the initial properties for a new object.
    In addition, any object can be associated as the prototype for another object, allowing the second object to share the first object's properties.
- Class based :- Class and a constructor to initializre new objects.
  Prototype based :- There is no concept of class. Just the constructor known as constructor function.
    Any JavaScript function can be used as a constructor. You use the new operator with a constructor function to create a new object.
- ES6 introduces classes in java. Thesre are jut wrapper over previous prototype based inheritance. The class syntax does not introduce a new object-oriented inheritance model to JavaScript.

Comparison of class-based (Java) and prototype-based (JavaScript) object systems
Category :	Class-based (Java) :	Prototype-based (JavaScript)
- Class vs. Instance
  Class and instance are distinct entities.	
  All objects can inherit from another object.
- Definition	
  Define a class with a class definition; instantiate a class with constructor methods.	
  Define and create a set of objects with constructor functions.
- Creation of new object	
  Create a single object with the new operator.	
  Same.
- Construction of object hierarchy	
  Construct an object hierarchy by using class definitions to define subclasses of existing classes. You specify the superclass within the class definition. You cannot change the superclass outside the class definition.	
  Construct an object hierarchy by assigning an object as the prototype associated with a constructor function. IT means you can change the prototype proerty at run time for an object and hence, the object hierarchy.
- Inheritance model	
  Inherit properties by following the class chain.	
  Inherit properties by following the prototype chain.
- Extension of properties	
  Class definition specifies all properties of all instances of a class. Cannot add properties dynamically at run time.	
  Constructor function or prototype specifies an initial set of properties. Can add or remove properties dynamically to individual objects or to the entire set of objects.
  
  - var jim = new Employee;  // Parentheses can be omitted if the constructor takes no arguments.
  
